{"version":3,"sources":["components/atoms/NavBar.tsx","components/atoms/ListMenu.tsx","components/pages/ListMenuPage.tsx","components/atoms/FavButton.tsx","components/pages/ListPage.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["NavBar","className","href","ListMenu","listName","onClick","link","ListMenuPage","useState","setTitle","menuClicked","event","currentTarget","map","list","FavButton","ListPage","useParams","items","setItems","inputValue","setInputValue","onSubmit","e","preventDefault","newItem","lists","value","onChange","target","type","style","listStyleType","length","item","id","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAkBeA,MAhBf,WACI,OACA,mCACJ,qBAAKC,UAAU,SAAf,SACA,+BACE,6BAAI,mBAAGA,UAAU,SAASC,KAAK,IAA3B,oBACJ,6BAAI,mBAAGA,KAAK,YAAR,oBACJ,6BAAI,mBAAGA,KAAK,SAAR,qBACJ,6BAAI,mBAAGA,KAAK,WAAR,+B,qDCaSC,EAfoB,SAAC,GAKpB,IAJZC,EAIW,EAJXA,SACAC,EAGW,EAHXA,QACAJ,EAEW,EAFXA,UAGMK,GADK,iBACE,SAASF,GACtB,OACA,qCACI,mBAAGF,KAAMI,EAAMD,QAASA,EAASJ,UAAWA,EAA5C,SAAwDG,IAAa,2BCK9DG,MAnBf,WACI,IAKE,EAA0BC,mBAAiB,WAA3C,mBAAcC,GAAd,WACMC,EAAc,SAACC,GACnBF,EAASE,EAAMC,cAAcX,YAEjC,OAAQ,mCATU,CACd,QACA,QACA,SAOQY,KAAI,SAACC,GAAD,OACZ,6BACE,cAAC,EAAD,CAAUV,SAAUU,EAAMT,QAASK,EAAaT,UAAWa,Y,yCCItDC,EAbqB,SAAC,GAIrB,IAHZV,EAGW,EAHXA,QACAJ,EAEW,EAFXA,UAEW,iBACX,OACA,qCACI,mBAAGC,KAAK,IAAIG,QAASA,EAASJ,UAAWA,EAAzC,iBAA2D,2BCiDpDe,EAvDmB,SAAC,GAEpB,oBAAC,IACJZ,EAAaa,cAAbb,SACR,EAA0BI,mBAAmB,IAA7C,mBAAOU,EAAP,KAAcC,EAAd,KACA,EAAoCX,mBAAS,IAA7C,mBAAOY,EAAP,KAAmBC,EAAnB,KAYA,OACA,qCACA,6BAAKjB,IACL,cAAC,EAAD,IACI,qBAAKH,UAAU,mBAAf,SACE,qBAAKA,UAAU,SAAf,SACE,uBAAMqB,SAhBd,SAAsBC,GACpBA,EAAEC,iBACF,IAAMC,EAAUL,EACA,KAAZK,GAAgBN,GAAS,SAACO,GAAD,4BAAeA,GAAf,CAAsBD,OACnDJ,EAAc,KAYR,UACE,uBACEM,MAAOP,EACPQ,SAAU,SAACjB,GAAD,OAAWU,EAAcV,EAAMkB,OAAOF,UAElD,wBAAQG,KAAK,SAAb,wBAKN,8BACE,oBAAIC,MAAO,CAAEC,cAAe,QAA5B,SACGd,EAAMe,OAAS,GACdf,EAAML,KAAI,SAACqB,EAAMC,GACf,OACE,6BACE,kCACE,uBAAOL,KAAK,WAAWK,GAAID,GAAWC,GACrCD,IAFS,QAAUC,IADfA,UAWnB,wBAAQ9B,QAAS,WAlCnBc,EAAS,KAkCP,4B,QCZOiB,MA9Bf,WAEE,OACE,cAAC,IAAD,UACE,sBAAKnC,UAAU,YAAf,UACA,cAAC,EAAD,IAEA,oBAAIA,UAAU,QAAd,kCAEE,eAAC,IAAD,WAIE,cAAC,IAAD,CAAOoC,KAAK,YAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,kBAAkBC,UAAWtB,OAK3C,uBACA,mBAAGd,KAAK,0CAAR,2DCzBOqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.301a81e8.chunk.js","sourcesContent":["import React from 'react';\n\nfunction NavBar(){\n    return (\n    <>\n<div className='navbar'>\n<ul>\n  <li><a className=\"active\" href=\"/\">Home</a></li>\n  <li><a href=\"/listPage\">list</a></li>\n  <li><a href=\"#about\">About</a></li>\n  <li><a href=\"#contact\">Contact</a></li>\n</ul>\n</div>\n</>\n)\n};\n\n\nexport default NavBar;","import React from 'react';\n\ninterface Props {\n    listName: string;\n    onClick?: any;\n    className?: string;\n}\n\nconst ListMenu : React.FC<Props> = ({\n    listName,\n    onClick,\n    className,\n    ...props\n  }: Props) => {\n    const link = \"/list/\"+listName;\n    return (\n    <>\n        <a href={link} onClick={onClick} className={className}>{listName}</a><br />\n    </>\n    );\n\n};\n\nexport default ListMenu;","import React, { useState } from 'react';\nimport ListMenu from '../atoms/ListMenu';\n\nfunction ListMenuPage(){\n    const listItems = [\n        'list1',\n        'list2',\n        'list3'\n      ]\n      const [title, setTitle] = useState<string>('default');\n      const menuClicked = (event: React.MouseEvent<HTMLElement>) => {\n        setTitle(event.currentTarget.className);\n      }\n    return (<>{\n      listItems.map((list)=>\n        <li>\n          <ListMenu listName={list} onClick={menuClicked} className={list} />\n        </li>\n      )\n    }</>\n    )};\n\nexport default ListMenuPage;","import React from 'react';\n\ninterface Props {\n    onClick?: any;\n    className?: string;\n}\n\nconst FavButton : React.FC<Props> = ({\n    onClick,\n    className,\n    ...props\n  }: Props) => {\n    return (\n    <>\n        <a href=\"#\" onClick={onClick} className={className}>Fav</a><br />\n    </>\n    );\n\n};\n\nexport default FavButton;","import React, { useState }  from 'react';\nimport { useParams } from 'react-router-dom'\nimport FavButton from '../atoms/FavButton';\n\ninterface Props {\n    // listName:string,\n}\n\nconst ListPage: React.FC<Props> = ({\n    ...props\n  }: Props) => {\n    const { listName } = useParams<{ listName: string }>();\n    const [items, setItems] = useState<string[]>([]);\n    const [inputValue, setInputValue] = useState(\"\");\n  \n    function handleChange(e: React.FormEvent<HTMLElement>) {\n      e.preventDefault();\n      const newItem = inputValue;\n      if (newItem !== \"\") setItems((lists) => [...lists, newItem]);\n      setInputValue(\"\");\n    }\n  \n    function removeAll() {\n      setItems([]);\n    }\n    return (\n    <>\n    <h2>{listName}</h2>\n    <FavButton />\n        <div className=\"ShoppingListMain\">\n          <div className=\"header\">\n            <form onSubmit={handleChange}>\n              <input\n                value={inputValue}\n                onChange={(event) => setInputValue(event.target.value)}\n              ></input>\n              <button type=\"submit\">Add</button>\n            </form>\n          </div>\n        </div>\n\n        <div>\n          <ul style={{ listStyleType: \"none\" }}>\n            {items.length > 0 &&\n              items.map((item, id) => {\n                return (\n                  <li key={id}>\n                    <label key={\"label\" + id}>\n                      <input type=\"checkbox\" id={item} key={id} />\n                      {item}\n                    </label>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n\n        <button onClick={() => removeAll()}>Remove All</button>\n</>\n    );\n\n};\n\nexport default ListPage;","import React, { Fragment, useState } from \"react\";\nimport \"./App.css\";\nimport \"milligram\";\nimport NavBar from \"./components/atoms/NavBar\";\nimport ListMenuPage from \"./components/pages/ListMenuPage\";\nimport ListPage from \"./components/pages/ListPage\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams\n} from \"react-router-dom\";\n\nfunction App() {\n\n  return (\n    <Router>\n      <div className=\"container\">\n      <NavBar />\n\n      <h1 className=\"title\">What to bring - list</h1>\n\n        <Switch>\n          {/* <Route path=\"/about\">\n            <About />\n          </Route> */}\n          <Route path=\"/listpage\">\n            <ListMenuPage />\n          </Route>\n          <Route path=\"/list/:listName\" component={ListPage} />\n          {/* <Route path=\"/\">\n            <Home />\n          </Route> */}\n        </Switch>\n        <br />\n        <a href=\"https://github.com/tomokr/shopping_list\">\n          https://github.com/tomokr/shopping_list\n        </a>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}