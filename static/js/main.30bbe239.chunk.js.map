{"version":3,"sources":["components/atoms/NavBar.tsx","components/atoms/ListMenu.tsx","components/pages/ListMenuPage.tsx","components/atoms/FavButton.tsx","components/pages/ListPage.tsx","components/pages/AboutPage.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["NavBar","className","href","ListMenu","listName","listId","onClick","link","ListMenuPage","useState","setTitle","menuClicked","event","currentTarget","map","list","idx","FavButton","ListPage","useParams","inputValue","setInputValue","error","setError","isLoaded","setIsLoaded","items","setItems","useEffect","fetch","then","res","json","data","message","onSubmit","e","preventDefault","newItem","id","name","lists","value","onChange","target","type","style","listStyleType","length","item","AboutPage","App","basename","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30bbe239.chunk.js","sourcesContent":["import React from 'react';\n\nfunction NavBar(){\n    return (\n    <>\n<div className='navbar'>\n<ul>\n  <li><a className=\"active\" href=\"/\">Home</a></li>\n  <li><a href=\"/listPage\">list</a></li>\n  <li><a href=\"/about\">About</a></li>\n  {/* <li><a href=\"#contact\">Contact</a></li> */}\n</ul>\n</div>\n</>\n)\n};\n\n\nexport default NavBar;","import React from 'react';\n\ninterface Props {\n    listName: string;\n    listId: number;\n    onClick?: any;\n    className?: string;\n}\n\nconst ListMenu : React.FC<Props> = ({\n    listName,\n    listId,\n    onClick,\n    className,\n    ...props\n  }: Props) => {\n    const link = \"/list/\"+listId+\"/\"+listName;\n    return (\n    <>\n        <a href={link} onClick={onClick} className={className}>{listName}</a><br />\n    </>\n    );\n\n};\n\nexport default ListMenu;","import React, { useState } from 'react';\nimport ListMenu from '../atoms/ListMenu';\n\nfunction ListMenuPage(){\n    const listItems = [\n        'list1',\n        'list2',\n        'list3'\n      ]\n      const [, setTitle] = useState<string>('default');\n      const menuClicked = (event: React.MouseEvent<HTMLElement>) => {\n        setTitle(event.currentTarget.className);\n      }\n    return (<>{\n      listItems.map((list, idx)=>\n        <li>\n          <ListMenu listName={list} listId={idx+1} onClick={menuClicked} className={list} />\n        </li>\n      )\n    }</>\n    )};\n\nexport default ListMenuPage;","import React from 'react';\n\ninterface Props {\n    onClick?: any;\n    className?: string;\n}\n\nconst FavButton : React.FC<Props> = ({\n    onClick,\n    className,\n    ...props\n  }: Props) => {\n    return (\n    <>\n        <a href=\"#\" onClick={onClick} className={className}>Fav</a><br />\n    </>\n    );\n\n};\n\nexport default FavButton;","import React, { useEffect, useState }  from 'react';\nimport { useParams } from 'react-router-dom'\nimport FavButton from '../atoms/FavButton';\n\ninterface Props {\n    // listId: number,\n}\n\ninterface Item {\n  id: string,\n  name: string\n}\n\nconst ListPage: React.FC<Props> = ({\n  // listId,\n    ...props\n  }: Props) => {\n    const { listName } = useParams<{ listName: string }>();\n    const { listId } = useParams<{ listId: string }>();\n    // const [items, setItems] = useState<string[]>([]);\n    const [inputValue, setInputValue] = useState(\"\");\n\n    const [error, setError] = useState<any>();\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState<Item[]>([]);\n  \n    useEffect(() => {\n      fetch(\"https://glacial-castle-81771.herokuapp.com/items/\"+listId)\n          .then(res => res.json())\n          .then(\n              (data) => {\n                  setIsLoaded(true);\n                  setItems(data);\n              },\n              (error) => {\n                  setIsLoaded(true);\n                  setError(error);\n              }\n          )\n    }, []);\n\n    function handleChange(e: React.FormEvent<HTMLElement>) {\n      e.preventDefault();\n      // const newItem = inputValue;\n      const newItem:Item = {id:'', name: inputValue}\n      if (newItem.name !== \"\") setItems((lists) => [...lists, newItem]);\n      setInputValue(\"\");\n    }\n  \n    function removeAll() {\n      setItems([]);\n    }\n\n    if (error) {\n        return <div>Error: {error ? error.message : 'something happens'})</div>;\n    } else if (!isLoaded) {\n        return <div>Loading...</div>;\n    } else {\n      return (\n        <>\n        <h2>{listName}</h2>\n        <FavButton />\n            <div className=\"ShoppingListMain\">\n              <div className=\"header\">\n                <form onSubmit={handleChange}>\n                  <input\n                    value={inputValue}\n                    onChange={(event) => setInputValue(event.target.value)}\n                  ></input>\n                  <button type=\"submit\">Add</button>\n                </form>\n              </div>\n            </div>\n    \n            <div>\n              <ul style={{ listStyleType: \"none\" }}>\n                {items.length > 0 &&\n                  items.map((item, id) => {\n                    return (\n                      <li key={id}>\n                        <label key={\"label\" + id}>\n                          <input type=\"checkbox\" id={item.id} key={id} />\n                          {item.name}\n                        </label>\n                      </li>\n                    );\n                  })}\n              </ul>\n            </div>\n    \n            <button onClick={() => removeAll()}>Remove All</button>\n    </>\n        );\n    \n    }\n};\n\nexport default ListPage;","import React from 'react';\n\nfunction AboutPage(){\n\n    return (<>\n    <h2>About</h2>\n    </>\n    )};\n\nexport default AboutPage;","import React from \"react\";\nimport \"./App.css\";\nimport \"milligram\";\nimport NavBar from \"./components/atoms/NavBar\";\nimport ListMenuPage from \"./components/pages/ListMenuPage\";\nimport ListPage from \"./components/pages/ListPage\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport AboutPage from \"./components/pages/AboutPage\";\n\nfunction App() {\n\n  return (\n    <Router basename=\"/\">\n      <div className=\"container\">\n      <NavBar />\n\n      <h1 className=\"title\">What to bring - list</h1>\n\n        <Switch>\n          <Route path=\"/about\">\n            <AboutPage />\n          </Route>\n          <Route path=\"/listpage\">\n            <ListMenuPage />\n          </Route>\n          <Route path=\"/list/:listId\" component={ListPage} />\n        </Switch>\n        <br />\n        <a href=\"https://github.com/tomokr/shopping_list\">\n          https://github.com/tomokr/shopping_list\n        </a>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}